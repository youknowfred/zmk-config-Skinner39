#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>

// Override the PMW listener to use layer 2 for scroll mode instead of layer 5
&pmw_listener {
    scroller {
        layers = <2>;  // Changed from 5 to 2
        // Invert Y axis and reduce scroll sensitivity (1/4 speed)
        input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 4>, <&zip_xy_to_scroll_mapper>;
    };
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";  // Better for homerow mods
            tapping-term-ms = <160>;            // Much faster activation
            quick-tap-ms = <0>;                 // Disable quick-tap for homerow mods
            require-prior-idle-ms = <0>;        // No idle requirement
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";  // Better for homerow mods
            tapping-term-ms = <135>;            // Much faster activation
            quick-tap-ms = <0>;                 // Disable quick-tap for homerow mods
            require-prior-idle-ms = <0>;        // No idle requirement
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        my_lt: my_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            label = "SCREENSHOT";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT &kp LGUI>;
        };

        zoom_out: zoom_out {
            compatible = "zmk,behavior-macro";
            label = "ZOOM_OUT";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp LGUI>;
        };

        zoom_in: zoom_in {
            compatible = "zmk,behavior-macro";
            label = "ZOOM_IN";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp LSHFT &kp LGUI>;
        };

        word_right: word_right {
            compatible = "zmk,behavior-macro";
            label = "WORD_RIGHT";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        word_left: word_left {
            compatible = "zmk,behavior-macro";
            label = "WORD_LEFT";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        brightness_up: brightness_up {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESS_UP";
            #binding-cells = <0>;
            bindings = <&kp F15>;
        };

        brightness_down: brightness_down {
            compatible = "zmk,behavior-macro";
            label = "BRIGHTNESS_DOWN";
            #binding-cells = <0>;
            bindings = <&kp F14>;
        };

        launchpad: launchpad {
            compatible = "zmk,behavior-macro";
            label = "LAUNCHPAD";
            #binding-cells = <0>;
            bindings = <&kp F4>;
        };

        mission_control: mission_control {
            compatible = "zmk,behavior-macro";
            label = "MISSION_CONTROL";
            #binding-cells = <0>;
            bindings = <&kp F3>;
        };

        code_block: code_block {
            compatible = "zmk,behavior-macro";
            label = "CODE_BLOCK";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
        };

        macro10: macro10 {
            compatible = "zmk,behavior-macro";
            label = "CTRL_UP";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q          &kp W      &kp E        &kp R     &kp T                                                  &kp Y               &kp U  &kp I      &kp O    &kp P
  &hml LSHIFT A  &kp S      &kp D        &kp F     &kp G                                                  &kp H               &kp J  &kp K      &kp L    &hmr RSHIFT SQT
  &my_lt 2 Z     &kp X      &kp C        &kp V     &kp B                                                  &kp N               &kp M  &kp COMMA  &kp DOT  &my_lt 2 FSLH
  &macro10       &kp LCTRL  &mkp MB2  &mkp MB1  &my_lt 1 SPACE  &mt LEFT_GUI TAB  &mt RIGHT_GUI ENTER  &my_lt 1 BACKSPACE                             &mkp MB1
            >;
        };

        number_layer {
            bindings = <
  &kp EXCL  &kp AT     &kp UP    &kp DLLR   &kp PRCNT                  &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp MINUS
  &kp LPAR  &kp LEFT   &kp DOWN  &kp RIGHT  &kp RPAR                   &kp PIPE   &kp N4  &kp N5  &kp N6  &kp PLUS
  &kp CAPS  &kp TILDE  &kp HASH  &kp CARET  &kp EQUAL                  &kp AMPS   &kp N1  &kp N2  &kp N3  &kp N0
  &trans    &trans     &mkp MB2  &mkp MB1   &trans     &trans  &trans  &trans                             &mkp MB1
            >;
        };

        macro_layer {
            bindings = <
  &trans    &kp ESC         &trans            &trans      &trans                          &code_block  &zoom_out   &zoom_in     &trans  &trans
  &kp LBRC  &screenshot     &kp SEMI          &kp COLON   &kp RBRC                        &kp UNDER  &word_left  &word_right  &trans  &trans
  &kp LBKT  &kp PIPE        &trans            &trans      &kp RBKT                        &trans  &mkp MB2    &trans       &trans  &trans
  &trans    &brightness_up  &brightness_down  &launchpad  &mission_control  &mo 6  &mo 6  &trans                                   &code_block
            >;
        };

        function_layer {
            bindings = <
  &kp F1  &kp F2   &kp F3   &kp F4   &trans                  &trans  &trans  &trans  &trans  &trans
  &kp F5  &kp F6   &kp F7   &kp F8   &trans                  &trans  &trans  &trans  &trans  &trans
  &kp F9  &kp F10  &kp F11  &kp F12  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            bindings = <
  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6         &kp N7    &kp N8  &kp N9    &kp N0
  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &kp PAGE_UP    &mkp MB1  &trans  &mkp MB2  &mkp MB3
  &trans    &trans    &trans  &trans     &trans                  &kp PAGE_DOWN  &trans    &trans  &trans    &trans
  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                                     &trans
            >;
        };

        system_layer {
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
  &trans        &trans        &trans        &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &bt BT_CLR    &trans        &trans        &trans  &trans                       &trans  &trans  &trans  &trans  &trans
  &trans        &trans        &trans        &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        scroll_layer {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
